DROP TABLE IF EXISTS CUSTOMER CASCADE;
CREATE TABLE CUSTOMER (
	ID SERIAL PRIMARY KEY,
	USERNAME TEXT NOT NULL UNIQUE,
	PASSWORD TEXT NOT NULL,
	EMAIL TEXT NOT NULL UNIQUE,
	ROLE_ID INT
);

INSERT INTO CUSTOMER (USERNAME, EMAIL, PASSWORD, ROLE_ID) VALUES ('admin', 'admin@gmail.com', 'admin', 1);
INSERT INTO CUSTOMER (USERNAME, EMAIL, PASSWORD, ROLE_ID) VALUES ('A', 'A@gmail.com', 'Apass', 2);
INSERT INTO CUSTOMER (USERNAME, EMAIL, PASSWORD, ROLE_ID) VALUES ('B', 'B@gmail.com', 'Bpass', 2);

DROP TABLE IF EXISTS ROLE CASCADE;
CREATE TABLE USER_ROLE (
	ID SERIAL PRIMARY KEY,
	ROLE_NAME TEXT NOT NULL UNIQUE
);

INSERT INTO USER_ROLE (ROLE_NAME) VALUES ('role_admin');
INSERT INTO USER_ROLE (ROLE_NAME) VALUES ('role_user');


DROP TABLE IF EXISTS PURCHASE CASCADE;
CREATE TABLE PURCHASE (
	ID SERIAL PRIMARY KEY,
	CUSTOMER_ID INT REFERENCES CUSTOMER(ID)
);

INSERT INTO PURCHASE (CUSTOMER_ID) VALUES (1);
INSERT INTO PURCHASE (CUSTOMER_ID) VALUES (2);

DROP TABLE IF EXISTS PRODUCT CASCADE;
CREATE TABLE PRODUCT (
	ID SERIAL PRIMARY KEY,
	NAME TEXT,
	PRICE NUMERIC CHECK (PRICE > 0)
);

INSERT INTO PRODUCT (NAME, PRICE) VALUES ('Product A', 5.5);
INSERT INTO PRODUCT (NAME, PRICE) VALUES ('Product B', 15.5);


DROP TABLE IF EXISTS PURCHASE_PRODUCT;
CREATE TABLE PURCHASE_PRODUCT (
	PURCHASE_ID INT REFERENCES PURCHASE(ID),
	PRODUCT_ID INT REFERENCES PRODUCT(ID),
	QUANTITY INT,

	PRIMARY KEY(PURCHASE_ID, PRODUCT_ID)
);

INSERT INTO PURCHASE_PRODUCT (PURCHASE_ID, PRODUCT_ID, QUANTITY)
VALUES (1, 1, 1);
INSERT INTO PURCHASE_PRODUCT (PURCHASE_ID, PRODUCT_ID, QUANTITY)
VALUES (2, 2, 3);

DROP TABLE IF EXISTS PRODUCT_IMAGE;
CREATE TABLE PRODUCT_IMAGE (
	ID SERIAL PRIMARY KEY,
	FILE_PATH TEXT
);